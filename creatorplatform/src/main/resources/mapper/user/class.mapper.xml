<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlf.creator.dao.user.clazz.ClassMapper">

    <resultMap id="classResultMap" type="com.tlf.creator.entity.user.clazz.Classes">
        <id property="id" column="id" javaType="java.lang.String"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
        <result property="updatedAt" column="updated_at" javaType="java.sql.Timestamp"/>
        <result property="deletedAt" column="deleted_at" javaType="java.sql.Timestamp"/>
        <result property="major" column="major" javaType="java.lang.String"/>
        <result property="startYear" column="start_year" javaType="java.lang.String"/>
        <result property="name" column="name" javaType="java.lang.String"/>
    </resultMap>

    <resultMap id="classAndCourseResultMap" type="com.tlf.creator.po.ClassCoursePO">
        <result property="name" column="name" javaType="java.lang.String"/>
        <result property="classesId" column="classes_id" javaType="java.lang.String"/>
        <result property="coursesId" column="courses_id" javaType="java.lang.String"/>
    </resultMap>

    <select id="selectClassByCourse" resultMap="classAndCourseResultMap">
        SELECT classes.`name`,classes_and_courses.classes_id,classes_and_courses.courses_id
        FROM classes_and_courses ,classes
        WHERE classes.id = classes_and_courses.classes_id AND classes_and_courses.deleted_at is null and
        classes_and_courses.courses_id = #{coursesId}
    </select>

    <select id="selectClassById" resultMap="classResultMap">
        select id,name,major,start_year from classes where id = #{id} and deleted_at is null;
    </select>

    <select id="selectAllClassName" resultMap="classResultMap">
         select id,major,start_year,name from classes where deleted_at is null
    </select>

    <select id="selectClassNameExcludeSelf" resultMap="classResultMap">
         select id,major,start_year,name from classes where deleted_at is null and id &lt;&gt; #{id}
    </select>

    <select id="selectClasses" resultMap="classResultMap">
        select id,name,major,start_year from classes where deleted_at is null order by created_at desc limit #{offset},#{limit};
    </select>

    <insert id="insertClass">
        insert into classes(id, created_at, updated_at, deleted_at, major, start_year, name) values
        (#{id},now(),now(),null,#{major},#{startYear},#{name})
    </insert>

    <update id="updateClass">
        update classes set updated_at=now(),major=#{major},name=#{name},start_year=#{startYear} where id = #{id}
    </update>

    <update id="deleteClass">
        update classes set deleted_at = now() where id = #{id}
    </update>

    <select id="selectTotalClasses" resultType="java.lang.Integer">
        select count(*) from classes where deleted_at is null;
    </select>
</mapper>