<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlf.creator.dao.user.course.CourseMapper">

    <resultMap id="courseResultMap" type="com.tlf.creator.entity.user.course.Courses">
        <id property="id" column="id" javaType="java.lang.String"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
        <result property="updatedAt" column="updated_at" javaType="java.sql.Timestamp"/>
        <result property="deletedAt" column="deleted_at" javaType="java.sql.Timestamp"/>
        <result property="course" column="course" javaType="java.lang.String"/>
        <result property="description" column="description" javaType="java.lang.String"/>
        <result property="semester" column="semester" javaType="java.lang.String"/>
        <result property="icon" column="icon" javaType="java.lang.String"/>
        <result property="objectives" column="objectives" javaType="java.lang.String"/>
        <result property="alias" column="alias" javaType="java.lang.String"/>
    </resultMap>

    <select id="selectCourseById" resultMap="courseResultMap">
        select id,created_at,updated_at,course,url,description,icon,objectives,alias from courses where id = #{id} and deleted_at is null;
    </select>

    <update id="updateCourseDescriptionById">
        update courses set updated_at = now(),description = #{description} where id = #{id}
    </update>

    <update id="updateCourseObjectivesById">
        update courses set updated_at = now(),objectives = #{objectives} where id = #{id}
    </update>

    <insert id="insertCourse">
        insert into courses(id, created_at, updated_at, deleted_at, course, url, description, semester,objectives) values
        (#{id},now(),now(),null,#{course},#{url},#{description},#{semester},#{objectives})
    </insert>

    <select id="selectAllCourse" resultMap="courseResultMap">
        select id,course,url,description,semester from courses where deleted_at is null order by created_at desc limit #{offset},#{limit}
    </select>

    <select id="selectCourse" resultMap="courseResultMap">
        select id ,course from courses where deleted_at is null;
    </select>

    <select id="selectTotalCourse" resultType="java.lang.Integer">
        select count(*) from courses where deleted_at is null;
    </select>

    <update id="deleteCourse">
        update courses set deleted_at = now() where id = #{id}
    </update>

    <update id="updateCourse">
        update courses set course=#{course},semester=#{semester} where id = #{id}
    </update>

    <select id="selectAllCourseName" resultMap="courseResultMap">
        select id,name from courses where deleted_at is null;
    </select>
</mapper>