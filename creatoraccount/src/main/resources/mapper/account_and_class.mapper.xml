<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlf.creatoraccount.dao.AccountAndClassMapper">
    <resultMap id="accountAndClassResultMap" type="com.tlf.creatoraccount.pojo.AccountAndClass">
        <id property="id" column="id" javaType="java.lang.String"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
        <result property="updatedAt" column="updated_at" javaType="java.sql.Timestamp"/>
        <result property="deletedAt" column="deleted_at" javaType="java.sql.Timestamp"/>
        <result property="accountId" column="account_id" javaType="java.lang.String"/>
        <result property="classId" column="class_id" javaType="java.lang.String"/>
    </resultMap>

    <select id="queryAccountAndClassByAccountId" resultMap="accountAndClassResultMap">
        select id,account_id,class_id from account_and_class
        where account_id = #{accountId} and deleted_at is null;
    </select>

    <select id="queryAccountAndClassByClassId" resultMap="accountAndClassResultMap">
        select id,account_id,class_id from account_and_class
        where class_id = #{classId} and deleted_at is null;
    </select>

    <insert id="insertAccountAndClass">
        insert into account_and_class(id, created_at, updated_at, deleted_at, account_id, class_id) values
        (#{id},now(),now(),null,#{accountId},#{classId})
    </insert>

    <update id="deleteAccountAndClass">
        update account_and_class set deleted_at = now() where account_id=#{accountId} and class_id=#{#{classId}}
    </update>

</mapper>