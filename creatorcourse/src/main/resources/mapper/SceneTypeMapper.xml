<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlf.creatorcourse.dao.simulationresource.SceneTypeMapper">

  <resultMap id="BaseResultMap" type="com.tlf.creatorcourse.entity.simulation.SceneType">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
  </resultMap>

  <sql id="Base_Column_List">
    id, created_at, updated_at, deleted_at, name, alias
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scene_type
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from scene_type
    where deleted_at is null
  </select>

  <select id="selectListByAlias" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from scene_type
    where deleted_at is null and alias = #{alias}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from scene_type
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.tlf.creatorcourse.entity.simulation.SceneType">
    insert into scene_type (id, created_at, updated_at, 
      deleted_at, name, ailas
      )
    values (#{id,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{ailas,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.tlf.creatorcourse.entity.simulation.SceneType">
    insert into scene_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ailas != null">
        ailas,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ailas != null">
        #{ailas,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tlf.creatorcourse.entity.simulation.SceneType">
    update scene_type
    <set>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ailas != null">
        ailas = #{ailas,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tlf.creatorcourse.entity.simulation.SceneType">
    update scene_type
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      ailas = #{ailas,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>