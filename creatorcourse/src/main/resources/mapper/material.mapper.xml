<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlf.creatorcourse.dao.coursestudy.MaterialMapper">
    <resultMap id="materialResultMap" type="com.tlf.creatorcourse.entity.coursestudy.Material">
        <id property="id" column="id" javaType="java.lang.String"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
        <result property="updatedAt" column="updated_at" javaType="java.sql.Timestamp"/>
        <result property="deletedAt" column="deleted_at" javaType="java.sql.Timestamp"/>
        <result property="name" column="name" javaType="java.lang.String"/>
        <result property="path" column="path" javaType="java.lang.String"/>
        <result property="typeId" column="type_id" javaType="java.lang.Integer"/>
    </resultMap>

    <insert id="insertMaterial">
        insert into material(id, created_at, updated_at, deleted_at, name, path, type_id) values
        (#{id},now(),now(),null,#{name},#{path},#{typeId})
    </insert>

    <select id="selectMaterialById" resultMap="materialResultMap">
        select id,name,path,type_id from material where deleted_at is null and id = #{id}
    </select>
    
    <select id="selectAllMaterials" resultMap="materialResultMap">
        select id,name,path,type_id from material where deleted_at is null limit #{offset},#{limit}
    </select>

    <select id="selectMaterialAmount" resultType="java.lang.Integer">
        select count(*) from material where deleted_at is null;
    </select>
    
    <update id="updateMaterialNameById">
        update material set updated_at=now(),name = #{name} where id=#{id}
    </update>

    <update id="deleteMaterialById">
        update material set deleted_at = now() where id = #{id}
    </update>
    

</mapper>