<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tlf.creatorcourse.dao.template.ExperimentTemplatesMapper" >

  <resultMap id="BaseResultMap" type="com.tlf.creatorcourse.entity.template.ExperimentTemplates" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="innerr" property="innerr" jdbcType="BIT" />
    <result column="creator_id" property="creatorId" jdbcType="VARCHAR" />
    <result column="guide_id" property="guideId" jdbcType="VARCHAR" />
    <result column="guide_stem" property="guideStem" jdbcType="VARCHAR" />
    <result column="report_id" property="reportId" jdbcType="VARCHAR" />
    <result column="report_stem" property="reportStem" jdbcType="VARCHAR" />
    <result column="bench_id" property="benchId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tlf.creatorcourse.entity.template.ExperimentTemplates" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, created_at, updated_at, deleted_at, name, innerr, creator_id, guide_id, guide_stem, 
    report_id, report_stem, bench_id
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>

  <select id="selectAllNames" resultType="java.lang.String">
    select name from task_experiment_templates where deleted_at is null and (innerr = 1 or creator_id = #{creatorId})
  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_experiment_templates
    where id = #{id,jdbcType=VARCHAR} and deleted_at is null
  </select>

  <select id="selectListInner" resultMap="ResultMapWithBLOBs">
    select id,updated_at,name,description from task_experiment_templates
    where deleted_at is null and innerr = 1 order by created_at desc limit #{offset},#{limit}
  </select>

  <select id="selectListNotInner" resultMap="ResultMapWithBLOBs">
    select id,updated_at,name,description from task_experiment_templates
    where deleted_at is null and innerr = 0 and creator_id = #{creatorId} order by created_at desc limit #{offset},#{limit}
  </select>

  <select id="selectCountInner" resultType="java.lang.Integer">
    select count(*) from task_experiment_templates where deleted_at is null and innerr = 1
  </select>

  <select id="selectCountNotInner" resultType="java.lang.Integer">
    select count(*) from task_experiment_templates where deleted_at is null and creator_id = #{creatorId} and innerr = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from task_experiment_templates
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.tlf.creatorcourse.entity.template.ExperimentTemplates" >
    insert into task_experiment_templates (id, created_at, updated_at, 
      deleted_at, name, innerr, 
      creator_id, guide_id, guide_stem, 
      report_id, report_stem, bench_id, 
      description)
    values (#{id,jdbcType=VARCHAR}, now(), now(),
      null, #{name,jdbcType=VARCHAR}, #{innerr,jdbcType=BIT},
      #{creatorId,jdbcType=VARCHAR}, #{guideId,jdbcType=VARCHAR}, #{guideStem,jdbcType=VARCHAR}, 
      #{reportId,jdbcType=VARCHAR}, #{reportStem,jdbcType=VARCHAR}, #{benchId,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.tlf.creatorcourse.entity.template.ExperimentTemplates" >
    update task_experiment_templates
    set name = #{name,jdbcType=VARCHAR},
      innerr = #{innerr,jdbcType=BIT},
      creator_id = #{creatorId,jdbcType=VARCHAR},
      guide_id = #{guideId,jdbcType=VARCHAR},
      guide_stem = #{guideStem,jdbcType=VARCHAR},
      report_id = #{reportId,jdbcType=VARCHAR},
      report_stem = #{reportStem,jdbcType=VARCHAR},
      bench_id = #{benchId,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateTemplateInner">
    update task_experiment_templates set innerr = 1 ,creator_id = null where id = #{id}
  </update>

  <select id="selectAllTemplates" resultMap="ResultMapWithBLOBs">
    select id,updated_at,name,description,creator_id,innerr from task_experiment_templates
    where deleted_at is null order by created_at desc limit #{offset},#{limit}
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    select count(*) from task_experiment_templates where deleted_at is null
  </select>

</mapper>