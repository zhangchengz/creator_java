<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tlf.creatorcourse.dao.taskexperiment.TaskExperimentsMapper" >

  <resultMap id="BaseResultMap" type="com.tlf.creatorcourse.entity.taskexperiment.TaskExperiments" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
    <result column="template_id" property="templateId" jdbcType="VARCHAR" />
    <result column="innerr" property="innerr" jdbcType="BIT" />
    <result column="master_id" property="masterId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="completed" property="completed" jdbcType="BIT" />
  </resultMap>

  <resultMap id="MasterResultMap" type="com.tlf.creatorcourse.po.TaskMasterPO">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
    <result column="template_id" property="templateId" jdbcType="VARCHAR" />
    <result column="innerr" property="innerr" jdbcType="BIT" />
    <result column="master_id" property="masterId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="completed" property="completed" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="TaskStudentResultMap" type="com.tlf.creatorcourse.po.TaskStudentPO">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
    <result column="template_id" property="templateId" jdbcType="VARCHAR" />
    <result column="innerr" property="innerr" jdbcType="BIT" />
    <result column="master_id" property="masterId" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="completed" property="completed" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="statu" property="statu" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, created_at, updated_at, deleted_at, template_id, innerr, master_id, start_time, 
    finish_time, total, complete, remark, completed
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from task_experiments
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <update id="stopTaskExperiment">
    update task_experiments set completed = 1 where id = #{id}
  </update>

  <update id="updateComplete">
    update task_experiments set complete = complete+1 where id = #{id}
  </update>

  <update id="deleteTaskExperiment">
    update task_experiments set deleted_at = now() where id = #{id}
  </update>
  
  <select id="selectByMaster" resultMap="MasterResultMap">
    SELECT
    task_experiments.id,
    task_experiments.template_id,
    task_experiments.innerr,
    task_experiments.master_id,
    task_experiments.start_time,
    task_experiments.finish_time,
    task_experiments.total,
    task_experiments.complete,
    task_experiments.remark,
    task_experiments.completed,
    task_experiment_templates.`name`,
    task_experiment_templates.description
    FROM
    task_experiments ,
    task_experiment_templates
    WHERE
    task_experiments.template_id = task_experiment_templates.id AND
    task_experiments.deleted_at is null AND
    <if test="completed != null" >
      task_experiments.completed = #{completed} AND
    </if>
    task_experiments.master_id = #{masterId}
    ORDER BY
    task_experiments.start_time DESC
    LIMIT #{offset}, #{limit}
  </select>

  <select id="selectCountByMaster" resultType="java.lang.Integer">
    select count(*) FROM task_experiment_templates ,task_experiments WHERE
    task_experiment_templates.id = task_experiments.template_id
    <if test="completed != null" >
      and completed = #{completed}
    </if>
    and master_id = #{masterId}
  </select>
  
  <select id="selectByStudent" resultMap="TaskStudentResultMap">
    SELECT
    task_experiment_templates.`name`,
    task_experiments.template_id,
    task_experiments.master_id,
    task_experiments.start_time,
    task_experiments.finish_time,
    task_experiments.remark,
    account_and_task_experiments.account_id,
    account_and_task_experiments.statu,
    task_experiments.id
    FROM
    account_and_task_experiments ,
    task_experiments ,
    task_experiment_templates
    WHERE
    account_and_task_experiments.deleted_at is null and
    task_experiments.deleted_at is null and
    task_experiment_templates.deleted_at is null and
    account_and_task_experiments.task_experiment_id = task_experiments.id AND
    task_experiments.template_id = task_experiment_templates.id AND
    account_and_task_experiments.account_id = #{accountId}
    ORDER BY
    task_experiments.start_time DESC
    LIMIT #{offset}, #{limit}
  </select>

  <select id="selectCountByStudent" resultType="java.lang.Integer">
    select count(*)
    FROM
    task_experiments ,
    account_and_task_experiments,
    task_experiment_templates
    WHERE
    task_experiments.id = account_and_task_experiments.task_experiment_id AND
    task_experiments.template_id = task_experiment_templates.id and task_experiment_templates.deleted_at is null and
    task_experiments.deleted_at is null and account_and_task_experiments.deleted_at is null and
    account_and_task_experiments.account_id = #{accountId}
  </select>

  <select id="selectByAccountId" resultMap="BaseResultMap">

  </select>

  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update task_experiments set deleted_at=now()
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="insert" parameterType="com.tlf.creatorcourse.entity.taskexperiment.TaskExperiments" >
    insert into task_experiments (id, created_at, updated_at, deleted_at, template_id, innerr,
      master_id, start_time, finish_time, total, complete, remark, completed)
    values (#{id,jdbcType=VARCHAR}, now(), now(),null, #{templateId,jdbcType=VARCHAR}, #{innerr,jdbcType=BIT},
      #{masterId,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{total,jdbcType=INTEGER}, #{complete,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
      #{completed,jdbcType=BIT})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.tlf.creatorcourse.entity.taskexperiment.TaskExperiments" >
    update task_experiments
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      template_id = #{templateId,jdbcType=VARCHAR},
      innerr = #{innerr,jdbcType=BIT},
      master_id = #{masterId,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=INTEGER},
      complete = #{complete,jdbcType=INTEGER},
      annex_id = #{annexId,jdbcType=VARCHAR},
      completed = #{completed,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectExpiredTask" resultType="java.lang.String">
    select id from task_experiments where finish_time &lt; NOW()
  </select>
  
  <update id="timedTaskExperiment">
        create event ${eventName}
        on schedule at #{startTime}
        do update account_and_task_experiments set statu = 'expired' where task_experiment_id = #{taskId} and (statu='new' or statu='save')
    </update>

  <update id="timedTaskExperiment1">
        create event ${eventName}
        on schedule at #{startTime}
        do update task_experiments set completed = 1 where id = #{taskId}
    </update>

</mapper>