<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.tlf.creatorcourse.dao.template.AnnexTemplateMapper">

    <resultMap id="BaseResultMap" type="com.tlf.creatorcourse.entity.template.AnnexTemplate">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="template_id" property="templateId" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="VARCHAR"/>
        <result column="creator_id" property="creatorId" jdbcType="VARCHAR"/>
        <result column="stem" property="stem" jdbcType="VARCHAR"/>
        <result column="exp_type_id" property="expTypeId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, created_at, updated_at, deleted_at, name, path, template_id, type_id, creator_id, stem,exp_type_id
  </sql>

    <select id="selectByTemplateId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from annex_template
        where template_id = #{templateId,jdbcType=VARCHAR} and deleted_at is null
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from annex_template
    where id = #{id,jdbcType=VARCHAR}
  </delete>

    <insert id="insert" parameterType="com.tlf.creatorcourse.entity.template.AnnexTemplate">
    insert into annex_template (id, created_at, updated_at, 
      deleted_at, name, path, 
      template_id, type_id, creator_id,stem,exp_type_id)
    values (#{id,jdbcType=VARCHAR}, now(), now(),
      null, #{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR},
      #{templateId,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{creatorId,jdbcType=VARCHAR},#{stem,jdbcType=VARCHAR},#{expTypeId,jdbcType=VARCHAR})
  </insert>

    <delete id="deleteByTemplateId" parameterType="java.lang.String">
    delete from annex_template where template_id = #{templateId}
  </delete>

    <update id="updateByPrimaryKey" parameterType="com.tlf.creatorcourse.entity.template.AnnexTemplate">
    update annex_template
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>