<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlf.creatorcourse.dao.taskexperiment.TaskExperimentsMapper">
    <resultMap id="TaskExperimentsResultMap" type="com.tlf.creatorcourse.entity.TaskExperiments">
        <id property="id" column="id" javaType="java.lang.String"/>
        <result property="createdAt" column="created_at" javaType="java.sql.Timestamp"/>
        <result property="updatedAt" column="updated_at" javaType="java.sql.Timestamp"/>
        <result property="deletedAt" column="deleted_at" javaType="java.sql.Timestamp"/>
        <result property="templateId" column="template_id" javaType="java.lang.String"/>
        <result property="innerr" column="innerr" javaType="java.lang.Boolean"/>
        <result property="masterId" column="master_id" javaType="java.lang.String"/>
        <result property="startTime" column="start_time" javaType="java.sql.Timestamp"/>
        <result property="finishTime" column="finish_time" javaType="java.sql.Timestamp"/>
        <result property="total" column="total" javaType="java.lang.Integer"/>
        <result property="complete" column="complete" javaType="java.lang.Integer"/>
        <result property="annexId" column="annex_id" javaType="java.lang.String"/>
        <result property="completed" column="completed" javaType="java.lang.Boolean"/>
    </resultMap>

    <!-- 根据老师id查询下发的任务-->
    <select id="selectTaskExperimentsByMasterId" resultMap="TaskExperimentsResultMap">
        select id,created_at,updated_at,template_id,innerr,master_id,start_time,finish_time,total,complete,annex_id,completed
        from task_experiments where master_id = #{masterId} and deleted_at is null limit #{offset},#{limit};
    </select>

    <select id="selectTotalTaskExperimentsByMasterId" resultType="java.lang.Integer">
        select count(*) from task_experiments where master_id = #{masterId} and deleted_at is null
    </select>

    <select id="selectTaskExperimentsById" resultMap="TaskExperimentsResultMap">
        select id,created_at,updated_at,deleted_at,innerr,template_id,master_id,start_time,finish_time,total,complete,annex_id,completed
        from task_experiments where id = #{id} and completed != 1;
    </select>

    <select id="selectAllTaskExperimentsUndone" resultMap="TaskExperimentsResultMap">
        select id,innerr,template_id from task_experiments where deleted_at is null and completed !=1
    </select>

    <select id="selectTaskById" resultMap="TaskExperimentsResultMap">
         select id,created_at,updated_at,deleted_at,innerr,template_id,master_id,start_time,finish_time,total,complete,annex_id,completed
        from task_experiments where id = #{id}
    </select>

    <insert id="addTaskExperiments">
        insert into task_experiments(id, created_at, updated_at, deleted_at, template_id,innerr, master_id, start_time,
        finish_time, total, complete,annex_id,completed) values
        (#{id},now(),now(),null,#{templateId},#{innerr},#{masterId},#{startTime},#{finishTime},#{total},#{complete},#{annexId},#{completed})
    </insert>

    <update id="updateTaskExperiments">
        update task_experiments set complete = complete+1 where id = #{id};
    </update>

    <update id="stopTaskExperiments">
        update task_experiments set completed = 1 where id=#{id};
    </update>

    <update id="deleteTaskExperiments">
        update task_experiments set deleted_at = now() where id = #{id};
    </update>

    <!--定时事件-->
    <update id="timedTask">
        create event ${eventName}
        on schedule at #{startTime}
        do call update_task(#{taskId});
    </update>
</mapper>